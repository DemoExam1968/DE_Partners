//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Мастер_пол.Model
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations.Schema;
    using System.Linq;

    public partial class Partner
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Partner()
        {
            this.PartnerProduct = new HashSet<PartnerProduct>();
        }

        public int PartnerId { get; set; }
        public int PartnerTypeId { get; set; }
        public string PartnerName { get; set; }
        public string PartnerDirector { get; set; }
        public string PartnerEmail { get; set; }
        public string PartnerPhone { get; set; }
        public string PartnerAdress { get; set; }
        public string PartnerINN { get; set; }
        public int PartnerRating { get; set; }

        public virtual PartnerType PartnerType { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<PartnerProduct> PartnerProduct { get; set; }

        [NotMapped]
        //Вариант заполнения данного свойства в цикле кодом
        public int PartnerDiscount { get; set; }

        //[NotMapped]
        ////Вариант заполнение свойства сеттором
        //public int PartnerDiscount
        //{
        //    get  //Метод возвращает сформированное значение свойства
        //    {
        //        int result = 0;
        //        int sumProductCount = App.DB.PartnerProduct.Where(pp => pp.PartnerId == this.PartnerId).Sum(pp => pp.PartnerProductCount);
        //        if (sumProductCount < 10000)
        //        {
        //            result = 0;
        //        }
        //        else
        //        {
        //            if (sumProductCount < 50000)
        //            {
        //                result = 5;
        //            }
        //            else
        //            {
        //                if (sumProductCount < 300000)
        //                {
        //                    result = 10;
        //                }
        //                else
        //                {
        //                    result = 15;
        //                }
        //            }
        //        }
        //        return result;
        //    }
        //    set { }
        //}
    }   
}
